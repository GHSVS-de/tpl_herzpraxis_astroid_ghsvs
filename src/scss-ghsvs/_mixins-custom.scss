
// Prosalus specific - START
@mixin backGrounder(
	$bgImage: null,
	$borderPosition: top,
	$bgColor: $herzGrau,
	$borderColor: $prosalusRed
){
	@if $bgImage == default {
		background-image: url($prosalusBgImage);
	}
	@else if $bgImage != null {
		background-image: url($bgImage);
	}

	@if $borderPosition != null {
		@include borderer($borderPosition, $borderColor);
	}

	@if $bgColor != null {
		background-color: $bgColor;
	}
}

@mixin borderer(
	$borderPosition: top,
	$borderColor: $prosalusRed
){
	border-#{$borderPosition}: 2px solid #{$borderColor};
}
// Prosalus specific - END

// Used in Prosalus - START
@mixin outline-custom($color1: $component-active-bg, $color2: $component-active-bg)
{
	outline: 0;
	@if $enable-shadows {
		@include box-shadow($btn-box-shadow, 0 0 0 $btn-focus-width rgba(mix($color1, $color2, 15%), .5));
	} @else {
		box-shadow: 0 0 0 0.25rem rgba(mix($color1, $color2, 15%), .5);
	}
}
// Used in Prosalus - END

// Used? - START
@mixin disabled()
{
	pointer-events: none;
	cursor: not-allowed;
}

@mixin border-color-y-custom($color)
{
	border-top-color: $color;
	border-bottom-color: $color;
}

@mixin border-color-x-custom($color)
{
	border-left-color: $color;
	border-right-color: $color;
}

@mixin border-top-dashed($color: $gray-600)
{
	border-top: $border-width dashed $color !important;
}

@mixin border-bottom-dashed($color: $gray-600)
{
	border-bottom: $border-width dashed $color !important;
}

@mixin dontPrintThis()
{
	display:none !important;
	visibility:hidden !important;
}
@mixin PrintThis()
{
	display:block !important;
	visibility:visible !important;
}
@mixin bold($strength: $font-weight-bold)
{
	font-weight: $strength !important;
}

// Oldfashioned (LESS)
// Manchmal will ich anders und $color selbst definieren.
@mixin button-variant2(
	$color,
	$background,
	$border,
	$hover-background: darken($background, 7.5%),
	$hover-border: darken($border, 10%),
	$active-border: darken($border, 12.5%),
	$active-background: darken($background, 10%)
){
  color: $color;
	@include gradient-bg($background);
  border-color: $border;
	// background-color: $background;
	@include gradient-bg($background);

  @include hover {
    color: color-yiq($hover-background);
    @include gradient-bg($hover-background);
    border-color: $hover-border;
  }

  &:focus,
  &.focus {
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: $btn-box-shadow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
    } @else {
      box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
    }
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: color-yiq($background);
    background-color: $background;
    border-color: $border;
    // Remove CSS gradients if they're enabled
    @if $enable-gradients {
      background-image: none;
    }
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    @if $enable-gradients {
      background-image: none; // Remove the gradient for the pressed/active state
    }
    border-color: $active-border;

    &:focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows and $btn-active-box-shadow != none {
        box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
      } @else {
        box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
      }
    }
  }
}

@mixin badge-variant2($bg) {
  color: color-yiq($bg);
  background-color: $bg;

  //&a {
    @include hover-focus {
      color: color-yiq($bg);
      background-color: darken($bg, 10%);
    }

    &:focus,
    &.focus {
      outline: 0;
      box-shadow: 0 0 0 $badge-focus-width rgba($bg, .5);
    }
  //}
}

// Fight against JCE with !important.
@mixin block()
{
  // border-radius: $border-radius;
	border-width: 3px!important;;
	border-style: solid !important;
  padding: 6px !important;;
  -webkit-box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3);
  box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3);
	//margin-top: ($spacer * 1) !important;;
	margin-bottom: ($spacer * 1) !important;
}

@mixin navBorders($borderWidth: $navBorders-width-wide-custom)
{
	border-width: $borderWidth;
	border-style: solid;
	@include border-color-x-custom(transparent);
	/* Das ist schick. Durchgehende Linie oben und unten. Spart andere
	Auszeichnung mit bg oder Schei√ü. */
	@include border-color-y-custom($gray-900);

	&.active
	{
		@include border-color-y-custom($orange);
	}
}

@mixin rotate-custom($degrees)
{
  transform: rotate($degrees);
}

// Da extends z.B. in editor.scss zu nervig.
@mixin ghsvs_img-left()
{
  float: left;
  margin-right: 1rem;
}

@mixin ghsvs_img-right()
{
  float:right;
  margin-left: 1rem;
}

@mixin ghsvs_img-full()
{
	width: 100% !important;
	height: auto !important;
  max-width: none !important;
}
